/* 
   Copyright (C) 2013 Stepan Vavra

This file is part of (Java Debug Wire Protocol) JDWP for 
Java PathFinder (JPF) project.

JDWP for JPF is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

JDWP for JPF is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>. 
 
 */

package gov.nasa.jpf.jdwp.event;

import gov.nasa.jpf.jdwp.command.VirtualMachineCommand;
import gov.nasa.jpf.vm.ThreadInfo;

import java.io.DataOutputStream;
import java.io.IOException;

/**
 * <p>
 * <h2>JDWP Specification</h2>
 * Notification of a completed thread in the target VM. The notification is
 * generated by the dying thread before it terminates. Because of this timing,
 * it is possible for {@link VirtualMachineCommand#ALLTHREADS} to return this
 * thread after this event is received.
 * <p>
 * </p>
 * Note that this event gives no information about the lifetime of the thread
 * object. It may or may not be collected soon depending on what references
 * exist in the target VM. </p>
 * 
 * @author stepan
 * 
 */
public class ThreadDeathEvent extends ThreadableEvent implements Threadable {

  /**
   * Creates Thread Death event.
   * 
   * @param threadInfo
   *          Ending thread
   */
  public ThreadDeathEvent(ThreadInfo threadInfo) {
    super(EventKind.THREAD_DEATH, threadInfo);
  }

  @Override
  protected void writeThreadableSpecific(DataOutputStream os) throws IOException {
  }

}
