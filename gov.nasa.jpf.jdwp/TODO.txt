DONE 1. ObjectId.write() should be untagged contrary to Value.write() which is tagged!

DONE -> ObjectId.write() and ObjectId.writeTagged()
DONE -> Value.write() and Value.writeUntagged()

IN PROGRESS 2. Use objectIdManager as late as possible (in the whole Event facility for instance) - it will speed up everything
IN PROGRESS  -> we don't need objectId for an object we're not sure we will send across JDWP (like when creating FieldModificationEvent)
  
3. Change sysouts to standard logging
4. Complete the possible errors - implement the rest of the Exceptions
IN PROGRESS 5. Doplnovat javadoc
6. Napsat testy - unit i integracni
7. Vyhodit enumy do solo trid - uz jsou moc rozrostly
8. Mozna predelat enumy na nejaky standartnejsi command pattern (skonzultovat s profikama)
9. U stepovani udelat podrobny rozbor (javadoc), jestli je implementace dostacuji a korektni (napriklad chovani u F5 vs F6 v Eclipse atd...)
IN PROGRESS 10. Odbouravat TODOs
11. Solve ObjectId#get() == null everywhere !!!
12. With one thread processing all the requests, the VM might become unresponsive if it gets stuck in a command (it's not even possible to call virtualmachinecommand#exit)
13. Need to finally decide whether nulls are allowed for Identifier instances - for ObjectIds we always get NullObjectId but this doesn't work for any Identifier (like in ExceptionOnlyFilter (see TODO there) for ReferenceTypeId) - it works for instance in FieldModificationEvent with objectBeingModified which as ObjectId is NullObjectId if it is for statics.